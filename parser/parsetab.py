
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEnonassocGTLTEQADD COLUMN COMMA DIVIDE DIVIDE EQ GT IF LPAREN LT MINUS MULTIPLY NUMBER PLUS RPAREN STRING SUBTRACT SUM TIMESexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression EQ expressionexpression : LPAREN expression RPARENexpression : COLUMN\n                  | STRINGexpression : NUMBERexpression : IF LPAREN expression COMMA expression COMMA expression RPAREN\n                  | SUM LPAREN expression COMMA expression RPAREN\n                  | SUBTRACT LPAREN expression COMMA expression RPAREN\n                  | ADD LPAREN expression COMMA expression RPAREN\n                  | MULTIPLY LPAREN expression COMMA expression RPAREN\n                  | DIVIDE LPAREN expression COMMA expression RPAREN'
    
_lr_action_items = {'LPAREN':([0,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[3,19,3,21,22,23,24,25,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'COLUMN':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'STRING':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'IF':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'SUM':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'SUBTRACT':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ADD':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'MULTIPLY':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'DIVIDE':([0,1,3,4,5,6,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,],[2,15,2,-9,-10,-11,2,2,2,2,2,2,2,2,15,2,2,2,2,2,15,15,-3,-4,-5,-6,-7,15,-8,15,15,15,15,15,2,2,2,2,2,2,15,15,15,15,15,15,-17,2,-13,-14,-15,-16,15,-12,]),'$end':([1,4,5,6,26,27,28,29,30,31,32,34,52,54,55,56,57,59,],[0,-9,-10,-11,-1,-2,-3,-4,-5,-6,-7,-8,-17,-13,-14,-15,-16,-12,]),'PLUS':([1,4,5,6,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,54,55,56,57,58,59,],[12,-9,-10,-11,12,-1,-2,-3,-4,-5,-6,-7,12,-8,12,12,12,12,12,12,12,12,12,12,12,-17,-13,-14,-15,-16,12,-12,]),'MINUS':([1,4,5,6,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,54,55,56,57,58,59,],[13,-9,-10,-11,13,-1,-2,-3,-4,-5,-6,-7,13,-8,13,13,13,13,13,13,13,13,13,13,13,-17,-13,-14,-15,-16,13,-12,]),'TIMES':([1,4,5,6,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,54,55,56,57,58,59,],[14,-9,-10,-11,14,14,14,-3,-4,-5,-6,-7,14,-8,14,14,14,14,14,14,14,14,14,14,14,-17,-13,-14,-15,-16,14,-12,]),'GT':([1,4,5,6,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,54,55,56,57,58,59,],[16,-9,-10,-11,16,16,16,16,16,None,None,None,16,-8,16,16,16,16,16,16,16,16,16,16,16,-17,-13,-14,-15,-16,16,-12,]),'LT':([1,4,5,6,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,54,55,56,57,58,59,],[17,-9,-10,-11,17,17,17,17,17,None,None,None,17,-8,17,17,17,17,17,17,17,17,17,17,17,-17,-13,-14,-15,-16,17,-12,]),'EQ':([1,4,5,6,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,46,47,48,49,50,51,52,54,55,56,57,58,59,],[18,-9,-10,-11,18,18,18,18,18,None,None,None,18,-8,18,18,18,18,18,18,18,18,18,18,18,-17,-13,-14,-15,-16,18,-12,]),'RPAREN':([4,5,6,20,26,27,28,29,30,31,32,34,46,48,49,50,51,52,54,55,56,57,58,59,],[-9,-10,-11,34,-1,-2,-3,-4,-5,-6,-7,-8,52,54,55,56,57,-17,-13,-14,-15,-16,59,-12,]),'COMMA':([4,5,6,26,27,28,29,30,31,32,33,34,35,36,37,38,39,47,52,54,55,56,57,59,],[-9,-10,-11,-1,-2,-3,-4,-5,-6,-7,40,-8,41,42,43,44,45,53,-17,-13,-14,-15,-16,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,12,13,14,15,16,17,18,19,21,22,23,24,25,40,41,42,43,44,45,53,],[1,20,26,27,28,29,30,31,32,33,35,36,37,38,39,46,47,48,49,50,51,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',15),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',16),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',17),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',18),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',19),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',20),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',21),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',26),
  ('expression -> COLUMN','expression',1,'p_expression_column','parser.py',31),
  ('expression -> STRING','expression',1,'p_expression_column','parser.py',32),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',37),
  ('expression -> IF LPAREN expression COMMA expression COMMA expression RPAREN','expression',8,'p_expression_function','parser.py',42),
  ('expression -> SUM LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_function','parser.py',43),
  ('expression -> SUBTRACT LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_function','parser.py',44),
  ('expression -> ADD LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_function','parser.py',45),
  ('expression -> MULTIPLY LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_function','parser.py',46),
  ('expression -> DIVIDE LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_function','parser.py',47),
]
